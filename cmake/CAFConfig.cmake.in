@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

set(CMAKE_THREAD_PREFER_PTHREAD TRUE)
set(THREADS_PREFER_PTHREAD_FLAG TRUE)
find_dependency(Threads)

include("${CMAKE_CURRENT_LIST_DIR}/CAFCoreTargets.cmake")

list (FIND CAF_FIND_COMPONENTS "io" _index)
if (${_index} GREATER -1)
  if (EXISTS "${CMAKE_CURRENT_LIST_DIR}/CAFIOTargets.cmake")
    include("${CMAKE_CURRENT_LIST_DIR}/CAFIOTargets.cmake")
  else()
    if (${CAF_FIND_REQUIRED_io})
      set(CAF_FOUND False)
      set(CAF_NOT_FOUND_MESSAGE "Required component caf::io is not available")
    endif()
  endif()
endif()

list (FIND CAF_FIND_COMPONENTS "test" _index)
if (${_index} GREATER -1)
  if ((EXISTS "${CMAKE_CURRENT_LIST_DIR}/CAFTestTargets.cmake") AND
      (EXISTS "${CMAKE_CURRENT_LIST_DIR}/CAFTestHelpers.cmake"))
    include("${CMAKE_CURRENT_LIST_DIR}/CAFTestTargets.cmake")
    include("${CMAKE_CURRENT_LIST_DIR}/CAFTestHelpers.cmake")
  else()
    if (${CAF_FIND_REQUIRED_test})
      set(CAF_FOUND False)
      set(CAF_NOT_FOUND_MESSAGE "Required component caf::test is not available")
    endif()
  endif()
endif()

list (FIND CAF_FIND_COMPONENTS "openssl" _index)
if (${_index} GREATER -1)
  if ((EXISTS "${CMAKE_CURRENT_LIST_DIR}/OpenSSLTargets.cmake") AND
      (EXISTS "${CMAKE_CURRENT_LIST_DIR}/CAFOpenSSLTargets.cmake"))
    find_dependency(OpenSSL 1.0.1)
    include("${CMAKE_CURRENT_LIST_DIR}/OpenSSLTargets.cmake")
    include("${CMAKE_CURRENT_LIST_DIR}/CAFOpenSSLTargets.cmake")
  else()
    if (${CAF_FIND_REQUIRED_openssl})
      set(CAF_FOUND False)
      set(CAF_NOT_FOUND_MESSAGE "Required component caf::openssl is not available")
    endif()
  endif()
endif()

list (FIND CAF_FIND_COMPONENTS "opencl" _index)
if (${_index} GREATER -1)
  if ((EXISTS "${CMAKE_CURRENT_LIST_DIR}/OpenCLTargets.cmake") AND
      (EXISTS "${CMAKE_CURRENT_LIST_DIR}/CAFOpenCLTargets.cmake"))
    find_dependency(OpenCL)
    include("${CMAKE_CURRENT_LIST_DIR}/OpenCLTargets.cmake")
    include("${CMAKE_CURRENT_LIST_DIR}/CAFOpenCLTargets.cmake")
  else()
    if (${CAF_FIND_REQUIRED_opencl})
      set(CAF_FOUND False)
      set(CAF_NOT_FOUND_MESSAGE "Required component caf::opencl is not available")
    endif()
  endif()
endif()

list(REMOVE_ITEM CAF_FIND_COMPONENTS "core" "io" "test" "opencl" "openssl")
if (${CAF_FIND_COMPONENTS})
  set(CAF_FOUND False)
  set(CAF_NOT_FOUND_MESSAGE "Specified unknown component(s): ${CAF_FIND_COMPONENTS}")
endif()
